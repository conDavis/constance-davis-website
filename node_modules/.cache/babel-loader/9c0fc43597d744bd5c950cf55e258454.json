{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davis\\\\WebstormProjects\\\\constance-davis-website\\\\src\\\\pages\\\\ArtPage\\\\Art.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { ArtContainer, ArtContent, RandomPiece, PieceContainer, ArtButton, GalleryPiece } from \"./ArtElements\";\nimport ConLoader from \"../../components/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Art = () => {\n  _s();\n\n  const [isFetchingData, setIsFetchingData] = useState(false);\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\n  const [randomArt, setRandomArt] = useState();\n  const [allArt, setAllArt] = useState([]);\n  const [isGalleryLoaded, setIsGalleryLoaded] = useState(false);\n  const [randomArtName, setRandomArtName] = useState();\n  const APIGithubURL = \"https://github.com/conDavis/art-api\";\n\n  const ArtTitle = title => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontStyle: \"italic\",\n        marginTop: \"8px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  };\n\n  const ArtButtons = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ArtButton, {\n        onClick: () => {\n          setIsImageLoaded(false);\n          setIsFetchingData(true);\n          fetchRandoArt().then(() => {\n            setIsFetchingData(false);\n          });\n        },\n        children: \"See another random piece\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/art#all_works\",\n        children: /*#__PURE__*/_jsxDEV(ArtButton, {\n          children: \"See all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: APIGithubURL,\n        target: \"_blank\",\n        children: /*#__PURE__*/_jsxDEV(ArtButton, {\n          children: \"Check Out the API\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  const RandoArtScreen = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(RandomPiece, {\n        src: randomArt,\n        alt: `Random Art at ${randomArt}`,\n        style: isImageLoaded ? {} : {\n          display: \"none\"\n        },\n        onLoad: () => setIsImageLoaded(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), isImageLoaded && /*#__PURE__*/_jsxDEV(ArtButtons, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true);\n  };\n\n  const fetchRandoArt = async () => {\n    await fetch(\"https://secret-basin-38348.herokuapp.com/random\").then(response => response.json()).then(data => {\n      setRandomArt(data.url);\n      setRandomArtName(data.name);\n    }).catch(error => console.log(error.message));\n  };\n\n  const fetchAllArt = async () => {\n    await fetch(\"https://secret-basin-38348.herokuapp.com/all\").then(response => response.json()).then(data => {\n      setAllArt(data);\n    }).catch(error => console.log(error.message));\n  };\n\n  useEffect(() => {\n    setIsFetchingData(true);\n\n    const fetchArt = async () => {\n      fetchRandoArt().then(() => {\n        setIsFetchingData(false);\n      });\n    };\n\n    fetchArt();\n  }, []);\n  useEffect(() => {\n    fetchAllArt().then(() => setIsGalleryLoaded(true));\n  }, [isFetchingData]);\n\n  const Piece = (name, source) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(RandomPiece, {\n        src: source,\n        alt: `Random Art at ${source}`,\n        style: isImageLoaded ? {} : {\n          display: \"none\"\n        }\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"$\", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ArtContainer, {\n    children: /*#__PURE__*/_jsxDEV(ArtContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        id: \"top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Random Piece Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PieceContainer, {\n        children: [!isImageLoaded && /*#__PURE__*/_jsxDEV(ConLoader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 30\n        }, this), !isFetchingData && /*#__PURE__*/_jsxDEV(RandoArtScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), isImageLoaded ? ArtTitle(randomArtName) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            paddingBottom: \"25%\"\n          },\n          children: \"fetching...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        id: \"all_works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), isImageLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"16px 0 32px 0\",\n          backgroundColor: \"#85ab8c\",\n          color: \"#F3F9F4\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"All Works\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this), isGalleryLoaded && allArt.map(galleryPiece => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"24px 4px 4px 16px\",\n            backgroundColor: \"#F3F9F4\",\n            color: \"#85ab8c\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(GalleryPiece, {\n            src: galleryPiece.url,\n            alt: `Art at ${galleryPiece.url}`\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 19\n          }, this), ArtTitle(galleryPiece.name)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/art#top\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Back To Top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Art, \"Vnc54EssJfAPvPIoqLDF6Y4cFpU=\");\n\n_c = Art;\nexport default Art;\n\nvar _c;\n\n$RefreshReg$(_c, \"Art\");","map":{"version":3,"sources":["C:/Users/davis/WebstormProjects/constance-davis-website/src/pages/ArtPage/Art.js"],"names":["React","useEffect","useState","HashLink","Link","ArtContainer","ArtContent","RandomPiece","PieceContainer","ArtButton","GalleryPiece","ConLoader","Art","isFetchingData","setIsFetchingData","isImageLoaded","setIsImageLoaded","randomArt","setRandomArt","allArt","setAllArt","isGalleryLoaded","setIsGalleryLoaded","randomArtName","setRandomArtName","APIGithubURL","ArtTitle","title","fontStyle","marginTop","ArtButtons","fetchRandoArt","then","RandoArtScreen","display","fetch","response","json","data","url","name","catch","error","console","log","message","fetchAllArt","fetchArt","Piece","source","paddingBottom","padding","backgroundColor","color","map","galleryPiece"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { HashLink as Link } from 'react-router-hash-link';\nimport {\n  ArtContainer,\n  ArtContent,\n  RandomPiece,\n  PieceContainer,\n  ArtButton,\n  GalleryPiece,\n} from \"./ArtElements\";\nimport ConLoader from \"../../components/Loader\";\n\nconst Art = () => {\n  const [isFetchingData, setIsFetchingData] = useState(false);\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\n  const [randomArt, setRandomArt] = useState();\n  const [allArt, setAllArt] = useState([]);\n  const [isGalleryLoaded, setIsGalleryLoaded] = useState(false);\n  const [randomArtName, setRandomArtName] = useState();\n\n  const APIGithubURL = \"https://github.com/conDavis/art-api\";\n  const ArtTitle = (title) => {\n    return (\n      <p style={{ fontStyle: \"italic\", marginTop: \"8px\" }}>\n        <b>{title}</b>\n      </p>\n    );\n  };\n\n  const ArtButtons = () => {\n    return (\n      <>\n        <ArtButton\n          onClick={() => {\n            setIsImageLoaded(false);\n            setIsFetchingData(true);\n            fetchRandoArt().then(() => {\n              setIsFetchingData(false);\n            });\n          }}\n        >\n          See another random piece\n        </ArtButton>\n        <Link to=\"/art#all_works\">\n          <ArtButton>See all</ArtButton>\n        </Link>\n        <a href={APIGithubURL} target=\"_blank\">\n          <ArtButton>Check Out the API</ArtButton>\n        </a>\n      </>\n    );\n  };\n  const RandoArtScreen = () => {\n    return (\n      <>\n        <RandomPiece\n          src={randomArt}\n          alt={`Random Art at ${randomArt}`}\n          style={isImageLoaded ? {} : { display: \"none\" }}\n          onLoad={() => setIsImageLoaded(true)}\n        />\n        <br />\n        {isImageLoaded && <ArtButtons />}\n      </>\n    );\n  };\n\n  \n\n  const fetchRandoArt = async () => {\n    await fetch(\"https://secret-basin-38348.herokuapp.com/random\")\n      .then((response) => response.json())\n      .then((data) => {\n        setRandomArt(data.url);\n        setRandomArtName(data.name);\n      })\n      .catch((error) => console.log(error.message));\n  };\n\n  const fetchAllArt = async () => {\n    await fetch(\"https://secret-basin-38348.herokuapp.com/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setAllArt(data);\n      })\n      .catch((error) => console.log(error.message));\n  };\n\n  useEffect(() => {\n    setIsFetchingData(true);\n    const fetchArt = async () => {\n    fetchRandoArt().then(() => {\n      setIsFetchingData(false);\n    });};\n    fetchArt();\n  }, []);\n\n  useEffect(() => {\n    fetchAllArt().then(() => setIsGalleryLoaded(true));\n  }, [isFetchingData]);\n\n  const Piece = (name, source) => {\n    return (\n      <div>\n        <RandomPiece\n          src={source}\n          alt={`Random Art at ${source}`}\n          style={isImageLoaded ? {} : { display: \"none\" }}\n          key={name}\n        />\n        <h2>${name}</h2>\n      </div>\n    );\n  };\n\n  return (\n    <ArtContainer>\n      <ArtContent>\n        <a id=\"top\" />\n        <h1>Random Piece Generator</h1>\n        <PieceContainer>\n          {!isImageLoaded && <ConLoader />}\n          {!isFetchingData && <RandoArtScreen />}\n          <br />\n          {isImageLoaded ? ArtTitle(randomArtName) : <p style={{paddingBottom: \"25%\"}}>fetching...</p>}\n        </PieceContainer>\n        <a id=\"all_works\" />\n        {isImageLoaded && (\n          <div\n            style={{\n              padding: \"16px 0 32px 0\",\n              backgroundColor: \"#85ab8c\",\n              color: \"#F3F9F4\",\n            }}\n          >\n\n              <h1>All Works</h1>\n            {isGalleryLoaded &&\n              allArt.map((galleryPiece) => (\n                <div\n                  style={{\n                    padding: \"24px 4px 4px 16px\",\n                    backgroundColor: \"#F3F9F4\",\n                    color: \"#85ab8c\",\n                  }}\n                >\n                  <GalleryPiece\n                    src={galleryPiece.url}\n                    alt={`Art at ${galleryPiece.url}`}\n                    key={name}\n                  />\n                  {ArtTitle(galleryPiece.name)}\n                </div>\n              ))}\n            <Link to=\"/art#top\">\n              <p>Back To Top</p>\n            </Link>\n          </div>\n        )}\n      </ArtContent>\n    </ArtContainer>\n  );\n};\n\nexport default Art;\n"]},"metadata":{},"sourceType":"module"}