{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davis\\\\WebstormProjects\\\\constance-davis-website\\\\src\\\\pages\\\\Art.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { ArtContainer, ArtContent, RandomPiece, PieceContainer, ArtButton } from \"./PageElements\";\nimport Loader from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Art = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\n  const [randomArt, setRandomArt] = useState();\n  const [randomArtName, setRandomArtName] = useState();\n\n  const ArtTitle = () => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontStyle: 'italic'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: randomArtName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  };\n\n  const ArtButtons = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ArtButton, {\n        onClick: () => {\n          setIsImageLoaded(false);\n          setIsLoading(true);\n          getArt().then(r => {\n            setIsLoading(false);\n          });\n        },\n        children: \"See another random piece\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(ArtButton, {\n        children: \"See all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ArtButton, {\n        children: \"Check Out the API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  };\n\n  const ArtScreen = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(RandomPiece, {\n        src: randomArt,\n        alt: \"Rando Art Randomizing...\",\n        style: isImageLoaded ? {} : {\n          display: 'none'\n        },\n        onLoad: () => setIsImageLoaded(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }, this), isImageLoaded && /*#__PURE__*/_jsxDEV(ArtButtons, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true);\n  };\n\n  const getArt = async () => {\n    await fetch('https://secret-basin-38348.herokuapp.com/random').then(response => response.json()).then(data => {\n      setRandomArt(data.url);\n      setRandomArtName(data.name);\n    }).catch(error => console.log(error.message));\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    getArt().then(r => {\n      setIsLoading(false);\n    });\n    console.log(randomArt);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ArtContainer, {\n    children: /*#__PURE__*/_jsxDEV(ArtContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Random Piece Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PieceContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), !isImageLoaded && /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Circles\",\n          color: \"#a8518a\",\n          height: 80,\n          width: 80,\n          style: {\n            paddingTop: '10%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 30\n        }, this), !isLoading && /*#__PURE__*/_jsxDEV(ArtScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 24\n        }, this), isImageLoaded ? /*#__PURE__*/_jsxDEV(ArtTitle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 28\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"fetching...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Art, \"z5K9AnD3+EkCKy+uS+G5aCbq+po=\");\n\n_c = Art;\nexport default Art;\n\nvar _c;\n\n$RefreshReg$(_c, \"Art\");","map":{"version":3,"sources":["C:/Users/davis/WebstormProjects/constance-davis-website/src/pages/Art.js"],"names":["React","useEffect","useState","ArtContainer","ArtContent","RandomPiece","PieceContainer","ArtButton","Loader","Art","isLoading","setIsLoading","isImageLoaded","setIsImageLoaded","randomArt","setRandomArt","randomArtName","setRandomArtName","ArtTitle","fontStyle","ArtButtons","getArt","then","r","ArtScreen","display","fetch","response","json","data","url","name","catch","error","console","log","message","paddingTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA4C,OAA5C;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,WAAnC,EAAgDC,cAAhD,EAAgEC,SAAhE,QAAgF,gBAAhF;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,EAA1C;AACA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,EAAlD;;AAEA,QAAMgB,QAAQ,GAAG,MAAM;AACrB,wBACE;AAAG,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAV;AAAA,6BAAiC;AAAA,kBAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,YADF;AAED,GAHD;;AAKA,QAAMI,UAAU,GAAG,MAAM;AACvB,wBAAO;AAAA,8BAAE,QAAC,SAAD;AAAW,QAAA,OAAO,EAAE,MAAM;AAACP,UAAAA,gBAAgB,CAAC,KAAD,CAAhB;AAAyBF,UAAAA,YAAY,CAAC,IAAD,CAAZ;AAAoBU,UAAAA,MAAM,GAAGC,IAAT,CAAcC,CAAC,IAAI;AAACZ,YAAAA,YAAY,CAAC,KAAD,CAAZ;AAAoB,WAAxC;AAA2C,SAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAF,eACP,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADO,eAEL,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFK;AAAA,oBAAP;AAID,GALD;;AAMA,QAAMa,SAAS,GAAG,MAAM;AACtB,wBAEE;AAAA,8BACA,QAAC,WAAD;AAAa,QAAA,GAAG,EAAEV,SAAlB;AAA6B,QAAA,GAAG,EAAC,0BAAjC;AAA4D,QAAA,KAAK,EAAEF,aAAa,GAAG,EAAH,GAAQ;AAAEa,UAAAA,OAAO,EAAE;AAAX,SAAxF;AACa,QAAA,MAAM,EAAE,MAAMZ,gBAAgB,CAAC,IAAD;AAD3C;AAAA;AAAA;AAAA;AAAA,cADA,eAGa;AAAA;AAAA;AAAA;AAAA,cAHb,EAIGD,aAAa,iBAAI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAJpB;AAAA,oBAFF;AAUD,GAXD;;AAaA,QAAMS,MAAM,GAAG,YAAY;AACzB,UAAMK,KAAK,CAAC,iDAAD,CAAL,CACHJ,IADG,CACGK,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADhB,EAEHN,IAFG,CAEGO,IAAD,IAAU;AAACd,MAAAA,YAAY,CAACc,IAAI,CAACC,GAAN,CAAZ;AAAwBb,MAAAA,gBAAgB,CAACY,IAAI,CAACE,IAAN,CAAhB;AAA4B,KAFjE,EAGHC,KAHG,CAGIC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB,CAHd,CAAN;AAID,GALD;;AAOAnC,EAAAA,SAAS,CAAE,MAAM;AACfU,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAU,IAAAA,MAAM,GAAGC,IAAT,CAAcC,CAAC,IAAI;AAACZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAAoB,KAAxC;AAEAuB,IAAAA,OAAO,CAACC,GAAR,CAAYrB,SAAZ;AACD,GALQ,EAKN,EALM,CAAT;AAQA,sBACE,QAAC,YAAD;AAAA,2BACE,QAAC,UAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,cAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,EAEG,CAACF,aAAD,iBAAkB,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,KAAK,EAAC,SAA7B;AAAuC,UAAA,MAAM,EAAE,EAA/C;AAAmD,UAAA,KAAK,EAAE,EAA1D;AAA8D,UAAA,KAAK,EAAE;AAACyB,YAAAA,UAAU,EAAE;AAAb;AAArE;AAAA;AAAA;AAAA;AAAA,gBAFrB,EAIC,CAAC3B,SAAD,iBAAc,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAJf,EAKGE,aAAa,gBAAG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALjC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA/DD;;GAAMH,G;;KAAAA,G;AAiEN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState }  from \"react\";\nimport { ArtContainer, ArtContent, RandomPiece, PieceContainer, ArtButton} from \"./PageElements\";\nimport Loader from 'react-loader-spinner';\nconst Art = () => {\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\n  const [randomArt, setRandomArt] = useState();\n  const [randomArtName, setRandomArtName] = useState();\n\n  const ArtTitle = () => {\n    return(\n      <p style={{fontStyle: 'italic'}}><b>{randomArtName}</b></p>);\n  }\n\n  const ArtButtons = () => {\n    return(<><ArtButton onClick={() => {setIsImageLoaded(false); setIsLoading(true); getArt().then(r => {setIsLoading(false)});}}>See another random piece</ArtButton>\n    <ArtButton>See all</ArtButton>\n      <ArtButton>Check Out the API</ArtButton>\n    </>);\n  }\n  const ArtScreen = () => {\n    return(\n\n      <>\n      <RandomPiece src={randomArt} alt=\"Rando Art Randomizing...\" style={isImageLoaded ? {} : { display: 'none' }}\n                   onLoad={() => setIsImageLoaded(true)}/>\n                   <br/>\n        {isImageLoaded && <ArtButtons/>}\n        </>\n\n    );\n  }\n\n  const getArt = async () => {\n    await fetch('https://secret-basin-38348.herokuapp.com/random')\n      .then((response) => response.json())\n      .then((data) => {setRandomArt(data.url); setRandomArtName(data.name)})\n      .catch((error) => console.log(error.message));\n  };\n\n  useEffect( () => {\n    setIsLoading(true);\n    getArt().then(r => {setIsLoading(false)});\n\n    console.log(randomArt);\n  }, []);\n\n\n  return (\n    <ArtContainer>\n      <ArtContent>\n        <h1>Random Piece Generator\n        </h1>\n        <PieceContainer>\n          <br/>\n          {!isImageLoaded && <Loader type=\"Circles\" color=\"#a8518a\" height={80} width={80} style={{paddingTop: '10%'}}/>\n          }\n        {!isLoading && <ArtScreen/>}\n          {isImageLoaded ? <ArtTitle/> : <p>fetching...</p>}\n\n        </PieceContainer>\n\n      </ArtContent>\n    </ArtContainer>\n  );\n};\n\nexport default Art;\n"]},"metadata":{},"sourceType":"module"}