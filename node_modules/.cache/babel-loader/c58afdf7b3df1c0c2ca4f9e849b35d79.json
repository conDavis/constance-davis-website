{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\Users\\\\davis\\\\WebstormProjects\\\\constance-davis-website\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Users\\\\davis\\\\WebstormProjects\\\\constance-davis-website\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\davis\\\\WebstormProjects\\\\constance-davis-website\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useEffect,useState}from\"react\";import{ArtContainer,ArtContent,RandomPiece,PieceContainer,ArtButton,GalleryPiece}from\"./ArtElements\";import ConLoader from\"../../components/Loader\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Art=function Art(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isFetchingData=_useState2[0],setIsFetchingData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isImageLoaded=_useState4[0],setIsImageLoaded=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),randomArt=_useState6[0],setRandomArt=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),allArt=_useState8[0],setAllArt=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isGalleryLoaded=_useState10[0],setIsGalleryLoaded=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),randomArtName=_useState12[0],setRandomArtName=_useState12[1];var APIGithubURL=\"https://github.com/conDavis/art-api\";var ArtTitle=function ArtTitle(title){return/*#__PURE__*/_jsx(\"p\",{style:{fontStyle:\"italic\",marginTop:\"8px\"},children:/*#__PURE__*/_jsx(\"b\",{children:title})});};var ArtButtons=function ArtButtons(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ArtButton,{onClick:function onClick(){setIsImageLoaded(false);setIsFetchingData(true);fetchRandoArt().then(function(){setIsFetchingData(false);});},children:\"See another random piece\"}),/*#__PURE__*/_jsx(\"a\",{href:\"#all_works\",children:/*#__PURE__*/_jsx(ArtButton,{children:\"See all\"})}),/*#__PURE__*/_jsx(\"a\",{href:APIGithubURL,target:\"_blank\",children:/*#__PURE__*/_jsx(ArtButton,{children:\"Check Out the API\"})})]});};var RandoArtScreen=function RandoArtScreen(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(RandomPiece,{src:randomArt,alt:\"Random Art at \".concat(randomArt),style:isImageLoaded?{}:{display:\"none\"},onLoad:function onLoad(){return setIsImageLoaded(true);}}),/*#__PURE__*/_jsx(\"br\",{}),isImageLoaded&&/*#__PURE__*/_jsx(ArtButtons,{})]});};var fetchRandoArt=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://secret-basin-38348.herokuapp.com/random\").then(function(response){return response.json();}).then(function(data){setRandomArt(data.url);setRandomArtName(data.name);}).catch(function(error){return console.log(error.message);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function fetchRandoArt(){return _ref.apply(this,arguments);};}();var fetchAllArt=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"https://secret-basin-38348.herokuapp.com/all\").then(function(response){return response.json();}).then(function(data){setAllArt(data);}).catch(function(error){return console.log(error.message);});case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchAllArt(){return _ref2.apply(this,arguments);};}();useEffect(function(){setIsFetchingData(true);fetchRandoArt().then(function(){setIsFetchingData(false);debugger;});},[]);useEffect(function(){fetchAllArt().then(function(){return setIsGalleryLoaded(true);});},[isFetchingData]);var Piece=function Piece(name,source){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(RandomPiece,{src:source,alt:\"Random Art at \".concat(source),style:isImageLoaded?{}:{display:\"none\"}},name),/*#__PURE__*/_jsxs(\"h2\",{children:[\"$\",name]})]});};return/*#__PURE__*/_jsx(ArtContainer,{children:/*#__PURE__*/_jsxs(ArtContent,{children:[/*#__PURE__*/_jsx(\"a\",{id:\"top\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Random Piece Generator\"}),/*#__PURE__*/_jsxs(PieceContainer,{children:[!isImageLoaded&&/*#__PURE__*/_jsx(ConLoader,{}),!isFetchingData&&/*#__PURE__*/_jsx(RandoArtScreen,{}),/*#__PURE__*/_jsx(\"br\",{}),isImageLoaded?ArtTitle(randomArtName):/*#__PURE__*/_jsx(\"p\",{style:{paddingBottom:\"25%\"},children:\"fetching...\"})]}),/*#__PURE__*/_jsx(\"a\",{id:\"all_works\"}),isImageLoaded&&/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"16px 0 32px 0\",backgroundColor:\"#85ab8c\",color:\"#F3F9F4\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"All Works\"}),isGalleryLoaded&&allArt.map(function(galleryPiece){return/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"24px 4px 4px 16px\",backgroundColor:\"#F3F9F4\",color:\"#85ab8c\"},children:[/*#__PURE__*/_jsx(GalleryPiece,{src:galleryPiece.url,alt:\"Art at \".concat(galleryPiece.url)},name),ArtTitle(galleryPiece.name)]});}),/*#__PURE__*/_jsx(\"a\",{href:\"#top\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Back To Top\"})})]})]})});};export default Art;","map":{"version":3,"sources":["C:/Users/davis/WebstormProjects/constance-davis-website/src/pages/ArtPage/Art.js"],"names":["React","useEffect","useState","ArtContainer","ArtContent","RandomPiece","PieceContainer","ArtButton","GalleryPiece","ConLoader","Art","isFetchingData","setIsFetchingData","isImageLoaded","setIsImageLoaded","randomArt","setRandomArt","allArt","setAllArt","isGalleryLoaded","setIsGalleryLoaded","randomArtName","setRandomArtName","APIGithubURL","ArtTitle","title","fontStyle","marginTop","ArtButtons","fetchRandoArt","then","RandoArtScreen","display","fetch","response","json","data","url","name","catch","error","console","log","message","fetchAllArt","Piece","source","paddingBottom","padding","backgroundColor","color","map","galleryPiece"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  ArtContainer,\n  ArtContent,\n  RandomPiece,\n  PieceContainer,\n  ArtButton,\n  GalleryPiece,\n} from \"./ArtElements\";\nimport ConLoader from \"../../components/Loader\";\n\nconst Art = () => {\n  const [isFetchingData, setIsFetchingData] = useState(false);\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\n  const [randomArt, setRandomArt] = useState();\n  const [allArt, setAllArt] = useState([]);\n  const [isGalleryLoaded, setIsGalleryLoaded] = useState(false);\n  const [randomArtName, setRandomArtName] = useState();\n\n  const APIGithubURL = \"https://github.com/conDavis/art-api\";\n  const ArtTitle = (title) => {\n    return (\n      <p style={{ fontStyle: \"italic\", marginTop: \"8px\" }}>\n        <b>{title}</b>\n      </p>\n    );\n  };\n\n  const ArtButtons = () => {\n    return (\n      <>\n        <ArtButton\n          onClick={() => {\n            setIsImageLoaded(false);\n            setIsFetchingData(true);\n            fetchRandoArt().then(() => {\n              setIsFetchingData(false);\n            });\n          }}\n        >\n          See another random piece\n        </ArtButton>\n        <a href=\"#all_works\">\n          <ArtButton>See all</ArtButton>\n        </a>\n        <a href={APIGithubURL} target=\"_blank\">\n          <ArtButton>Check Out the API</ArtButton>\n        </a>\n      </>\n    );\n  };\n  const RandoArtScreen = () => {\n    return (\n      <>\n        <RandomPiece\n          src={randomArt}\n          alt={`Random Art at ${randomArt}`}\n          style={isImageLoaded ? {} : { display: \"none\" }}\n          onLoad={() => setIsImageLoaded(true)}\n        />\n        <br />\n        {isImageLoaded && <ArtButtons />}\n      </>\n    );\n  };\n\n  const fetchRandoArt = async () => {\n    await fetch(\"https://secret-basin-38348.herokuapp.com/random\")\n      .then((response) => response.json())\n      .then((data) => {\n        setRandomArt(data.url);\n        setRandomArtName(data.name);\n      })\n      .catch((error) => console.log(error.message));\n  };\n\n  const fetchAllArt = async () => {\n    await fetch(\"https://secret-basin-38348.herokuapp.com/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setAllArt(data);\n      })\n      .catch((error) => console.log(error.message));\n  };\n\n  useEffect(() => {\n    setIsFetchingData(true);\n    fetchRandoArt().then(() => {\n      setIsFetchingData(false);\n      debugger;\n    });\n  }, []);\n\n  useEffect(() => {\n    fetchAllArt().then(() => setIsGalleryLoaded(true));\n  }, [isFetchingData]);\n\n  const Piece = (name, source) => {\n    return (\n      <div>\n        <RandomPiece\n          src={source}\n          alt={`Random Art at ${source}`}\n          style={isImageLoaded ? {} : { display: \"none\" }}\n          key={name}\n        />\n        <h2>${name}</h2>\n      </div>\n    );\n  };\n\n  return (\n    <ArtContainer>\n      <ArtContent>\n        <a id=\"top\" />\n        <h1>Random Piece Generator</h1>\n        <PieceContainer>\n          {!isImageLoaded && <ConLoader />}\n          {!isFetchingData && <RandoArtScreen />}\n          <br />\n          {isImageLoaded ? ArtTitle(randomArtName) : <p style={{paddingBottom: \"25%\"}}>fetching...</p>}\n        </PieceContainer>\n        <a id=\"all_works\" />\n        {isImageLoaded && (\n          <div\n            style={{\n              padding: \"16px 0 32px 0\",\n              backgroundColor: \"#85ab8c\",\n              color: \"#F3F9F4\",\n            }}\n          >\n            <h1>All Works</h1>\n            {isGalleryLoaded &&\n              allArt.map((galleryPiece) => (\n                <div\n                  style={{\n                    padding: \"24px 4px 4px 16px\",\n                    backgroundColor: \"#F3F9F4\",\n                    color: \"#85ab8c\",\n                  }}\n                >\n                  <GalleryPiece\n                    src={galleryPiece.url}\n                    alt={`Art at ${galleryPiece.url}`}\n                    key={name}\n                  />\n                  {ArtTitle(galleryPiece.name)}\n                </div>\n              ))}\n            <a href=\"#top\">\n              <p>Back To Top</p>\n            </a>\n          </div>\n        )}\n      </ArtContent>\n    </ArtContainer>\n  );\n};\n\nexport default Art;\n"]},"metadata":{},"sourceType":"module"}