{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davis\\\\WebstormProjects\\\\constance-davis-website\\\\src\\\\pages\\\\Art.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { ArtContainer, ArtContent, RandomPiece, PieceContainer, ArtButton } from \"./PageElements\";\nimport Loader from \"../components/Loader\";\nimport ConLoader from \"../components/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Art = () => {\n  _s();\n\n  const [isFetchingData, setIsFetchingData] = useState(false);\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\n  const [randomArt, setRandomArt] = useState();\n  const [randomArtName, setRandomArtName] = useState();\n\n  const ArtTitle = () => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontStyle: \"italic\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: randomArtName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  };\n\n  const ArtButtons = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ArtButton, {\n        onClick: () => {\n          setIsImageLoaded(false);\n          setIsFetchingData(true);\n          fetchArt().then(r => {\n            setIsFetchingData(false);\n          });\n        },\n        children: \"See another random piece\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ArtButton, {\n        children: \"See all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ArtButton, {\n        children: \"Check Out the API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  const ArtScreen = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(RandomPiece, {\n        src: randomArt,\n        alt: `Random Art at ${randomArt}`,\n        style: isImageLoaded ? {} : {\n          display: \"none\"\n        },\n        onLoad: () => setIsImageLoaded(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), isImageLoaded && /*#__PURE__*/_jsxDEV(ArtButtons, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true);\n  };\n\n  const fetchArt = async () => {\n    await fetch(\"https://secret-basin-38348.herokuapp.com/random\").then(response => response.json()).then(data => {\n      setRandomArt(data.url);\n      setRandomArtName(data.name);\n    }).catch(error => console.log(error.message));\n  };\n\n  useEffect(() => {\n    setIsFetchingData(true);\n    fetchArt().then(r => {\n      setIsFetchingData(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ArtContainer, {\n    children: /*#__PURE__*/_jsxDEV(ArtContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Random Piece Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PieceContainer, {\n        children: [!isImageLoaded && /*#__PURE__*/_jsxDEV(ConLoader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 30\n        }, this), !isFetchingData && /*#__PURE__*/_jsxDEV(ArtScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 31\n        }, this), isImageLoaded ? /*#__PURE__*/_jsxDEV(ArtTitle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 28\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"fetching...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Art, \"mTEPNAWPkT84fuFBfZK5LuItPVs=\");\n\n_c = Art;\nexport default Art;\n\nvar _c;\n\n$RefreshReg$(_c, \"Art\");","map":{"version":3,"sources":["C:/Users/davis/WebstormProjects/constance-davis-website/src/pages/Art.js"],"names":["React","useEffect","useState","ArtContainer","ArtContent","RandomPiece","PieceContainer","ArtButton","Loader","ConLoader","Art","isFetchingData","setIsFetchingData","isImageLoaded","setIsImageLoaded","randomArt","setRandomArt","randomArtName","setRandomArtName","ArtTitle","fontStyle","ArtButtons","fetchArt","then","r","ArtScreen","display","fetch","response","json","data","url","name","catch","error","console","log","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,YADF,EAEEC,UAFF,EAGEC,WAHF,EAIEC,cAJF,EAKEC,SALF,QAMO,gBANP;AAOA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,EAA1C;AACA,QAAM,CAACe,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,EAAlD;;AAEA,QAAMiB,QAAQ,GAAG,MAAM;AACrB,wBACE;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAV;AAAA,6BACE;AAAA,kBAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND;;AAQA,QAAMI,UAAU,GAAG,MAAM;AACvB,wBACE;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,OAAO,EAAE,MAAM;AACbP,UAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAF,UAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAU,UAAAA,QAAQ,GAAGC,IAAX,CAAiBC,CAAD,IAAO;AACrBZ,YAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,WAFD;AAGD,SAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA,oBADF;AAiBD,GAlBD;;AAmBA,QAAMa,SAAS,GAAG,MAAM;AACtB,wBACE;AAAA,8BACE,QAAC,WAAD;AACE,QAAA,GAAG,EAAEV,SADP;AAEE,QAAA,GAAG,EAAG,iBAAgBA,SAAU,EAFlC;AAGE,QAAA,KAAK,EAAEF,aAAa,GAAG,EAAH,GAAQ;AAAEa,UAAAA,OAAO,EAAE;AAAX,SAH9B;AAIE,QAAA,MAAM,EAAE,MAAMZ,gBAAgB,CAAC,IAAD;AAJhC;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA;AAAA;AAAA;AAAA,cAPF,EAQGD,aAAa,iBAAI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cARpB;AAAA,oBADF;AAYD,GAbD;;AAeA,QAAMS,QAAQ,GAAG,YAAY;AAC3B,UAAMK,KAAK,CAAC,iDAAD,CAAL,CACHJ,IADG,CACGK,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADhB,EAEHN,IAFG,CAEGO,IAAD,IAAU;AACdd,MAAAA,YAAY,CAACc,IAAI,CAACC,GAAN,CAAZ;AACAb,MAAAA,gBAAgB,CAACY,IAAI,CAACE,IAAN,CAAhB;AACD,KALG,EAMHC,KANG,CAMIC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB,CANd,CAAN;AAOD,GARD;;AAUApC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAU,IAAAA,QAAQ,GAAGC,IAAX,CAAiBC,CAAD,IAAO;AACrBZ,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,sBACE,QAAC,YAAD;AAAA,2BACE,QAAC,UAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAA,mBACG,CAACC,aAAD,iBAAkB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBADrB,EAEG,CAACF,cAAD,iBAAmB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAFtB,EAGGE,aAAa,gBAAG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHlC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA7ED;;GAAMH,G;;KAAAA,G;AA+EN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  ArtContainer,\n  ArtContent,\n  RandomPiece,\n  PieceContainer,\n  ArtButton,\n} from \"./PageElements\";\nimport Loader from \"../components/Loader\";\nimport ConLoader from \"../components/Loader\";\nconst Art = () => {\n  const [isFetchingData, setIsFetchingData] = useState(false);\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\n  const [randomArt, setRandomArt] = useState();\n  const [randomArtName, setRandomArtName] = useState();\n\n  const ArtTitle = () => {\n    return (\n      <p style={{ fontStyle: \"italic\" }}>\n        <b>{randomArtName}</b>\n      </p>\n    );\n  };\n\n  const ArtButtons = () => {\n    return (\n      <>\n        <ArtButton\n          onClick={() => {\n            setIsImageLoaded(false);\n            setIsFetchingData(true);\n            fetchArt().then((r) => {\n              setIsFetchingData(false);\n            });\n          }}\n        >\n          See another random piece\n        </ArtButton>\n        <ArtButton>See all</ArtButton>\n        <ArtButton>Check Out the API</ArtButton>\n      </>\n    );\n  };\n  const ArtScreen = () => {\n    return (\n      <>\n        <RandomPiece\n          src={randomArt}\n          alt={`Random Art at ${randomArt}`}\n          style={isImageLoaded ? {} : { display: \"none\" }}\n          onLoad={() => setIsImageLoaded(true)}\n        />\n        <br />\n        {isImageLoaded && <ArtButtons />}\n      </>\n    );\n  };\n\n  const fetchArt = async () => {\n    await fetch(\"https://secret-basin-38348.herokuapp.com/random\")\n      .then((response) => response.json())\n      .then((data) => {\n        setRandomArt(data.url);\n        setRandomArtName(data.name);\n      })\n      .catch((error) => console.log(error.message));\n  };\n\n  useEffect(() => {\n    setIsFetchingData(true);\n    fetchArt().then((r) => {\n      setIsFetchingData(false);\n    });\n  }, []);\n\n  return (\n    <ArtContainer>\n      <ArtContent>\n        <h1>Random Piece Generator</h1>\n        <PieceContainer>\n          {!isImageLoaded && <ConLoader />}\n          {!isFetchingData && <ArtScreen />}\n          {isImageLoaded ? <ArtTitle /> : <p>fetching...</p>}\n        </PieceContainer>\n      </ArtContent>\n    </ArtContainer>\n  );\n};\n\nexport default Art;\n"]},"metadata":{},"sourceType":"module"}