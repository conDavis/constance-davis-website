{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davis\\\\WebstormProjects\\\\constance-davis-website\\\\src\\\\pages\\\\Art.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { ArtContainer, ArtContent, RandomPiece, PieceContainer } from \"./PageElements\";\nimport Loader from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Art = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\n  const [randomArt, setRandomArt] = useState();\n  const [randomArtName, setRandomArtName] = useState('Loading...');\n\n  const ArtScreen = () => {\n    return /*#__PURE__*/_jsxDEV(RandomPiece, {\n      src: randomArt,\n      alt: \"Rando Art Randomizing...\",\n      style: {\n        visible: isImageLoaded\n      },\n      onLoad: () => setIsImageLoaded(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  };\n\n  const getArt = async () => {\n    await fetch('https://secret-basin-38348.herokuapp.com/random').then(response => response.json()).then(data => {\n      setRandomArt(data.url);\n      setRandomArtName(data.name);\n    }).catch(error => console.log(error.message));\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    getArt().then(r => {\n      setIsLoading(false);\n    });\n    console.log(randomArt);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ArtContainer, {\n    children: /*#__PURE__*/_jsxDEV(ArtContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Random Piece Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PieceContainer, {\n        children: !isLoading && /*#__PURE__*/_jsxDEV(ArtScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: randomArtName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Art, \"9KRHdjBHr3ANSM5YPiA7yqXaQJc=\");\n\n_c = Art;\nexport default Art;\n\nvar _c;\n\n$RefreshReg$(_c, \"Art\");","map":{"version":3,"sources":["C:/Users/davis/WebstormProjects/constance-davis-website/src/pages/Art.js"],"names":["React","useEffect","useState","ArtContainer","ArtContent","RandomPiece","PieceContainer","Loader","Art","isLoading","setIsLoading","isImageLoaded","setIsImageLoaded","randomArt","setRandomArt","randomArtName","setRandomArtName","ArtScreen","visible","getArt","fetch","then","response","json","data","url","name","catch","error","console","log","message","r"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA4C,OAA5C;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,WAAnC,EAAgDC,cAAhD,QAAqE,gBAArE;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,EAA1C;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,YAAD,CAAlD;;AAEA,QAAMe,SAAS,GAAG,MAAM;AACtB,wBAEE,QAAC,WAAD;AAAa,MAAA,GAAG,EAAEJ,SAAlB;AAA6B,MAAA,GAAG,EAAC,0BAAjC;AAA4D,MAAA,KAAK,EAAE;AAACK,QAAAA,OAAO,EAAEP;AAAV,OAAnE;AACa,MAAA,MAAM,EAAE,MAAMC,gBAAgB,CAAC,IAAD;AAD3C;AAAA;AAAA;AAAA;AAAA,YAFF;AAOD,GARD;;AAUA,QAAMO,MAAM,GAAG,YAAY;AACzB,UAAMC,KAAK,CAAC,iDAAD,CAAL,CACHC,IADG,CACGC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADhB,EAEHF,IAFG,CAEGG,IAAD,IAAU;AAACV,MAAAA,YAAY,CAACU,IAAI,CAACC,GAAN,CAAZ;AAAwBT,MAAAA,gBAAgB,CAACQ,IAAI,CAACE,IAAN,CAAhB;AAA4B,KAFjE,EAGHC,KAHG,CAGIC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB,CAHd,CAAN;AAID,GALD;;AAOA9B,EAAAA,SAAS,CAAE,MAAM;AACfS,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAS,IAAAA,MAAM,GAAGE,IAAT,CAAcW,CAAC,IAAI;AAACtB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAAoB,KAAxC;AAEAmB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,SAAZ;AACD,GALQ,EAKN,EALM,CAAT;AAQA,sBACE,QAAC,YAAD;AAAA,2BACE,QAAC,UAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAA,kBAEC,CAACJ,SAAD,iBAAc,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAFf;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAA,kBAAIM;AAAJ;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA5CD;;GAAMP,G;;KAAAA,G;AA8CN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState }  from \"react\";\nimport { ArtContainer, ArtContent, RandomPiece, PieceContainer} from \"./PageElements\";\nimport Loader from 'react-loader-spinner';\nconst Art = () => {\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\n  const [randomArt, setRandomArt] = useState();\n  const [randomArtName, setRandomArtName] = useState('Loading...');\n\n  const ArtScreen = () => {\n    return(\n\n      <RandomPiece src={randomArt} alt=\"Rando Art Randomizing...\" style={{visible: isImageLoaded}}\n                   onLoad={() => setIsImageLoaded(true)}/>\n\n\n    );\n  }\n\n  const getArt = async () => {\n    await fetch('https://secret-basin-38348.herokuapp.com/random')\n      .then((response) => response.json())\n      .then((data) => {setRandomArt(data.url); setRandomArtName(data.name)})\n      .catch((error) => console.log(error.message));\n  };\n\n  useEffect( () => {\n    setIsLoading(true);\n    getArt().then(r => {setIsLoading(false)});\n\n    console.log(randomArt);\n  }, []);\n\n\n  return (\n    <ArtContainer>\n      <ArtContent>\n        <h1>Random Piece Generator</h1>\n        <PieceContainer>\n\n        {!isLoading && <ArtScreen/>}\n        </PieceContainer>\n        <p>{randomArtName}</p>\n      </ArtContent>\n    </ArtContainer>\n  );\n};\n\nexport default Art;\n"]},"metadata":{},"sourceType":"module"}